# template-sign-binary.yml
# Signs a binary via ESRP

parameters:
  LibraryName: ''
  BuildConfiguration: ''

steps:
- task: EsrpCodeSigning@4
  displayName: 'Sign ${{ parameters.LibraryName }}'
  inputs:
    ConnectedServiceName: 'IDDP Code Signing'
    FolderPath: '$(Build.SourcesDirectory)\$(WilsonSourceDirectory)src'
    Pattern: ${{ parameters.LibraryName }}.dll
    signConfigType: inlineSignParams
    inlineOperation: |
     [
       {
         "keyCode": "MSSharedLibSnKey",
         "operationSetCode": "StrongNameSign",
         "parameters": null,
         "toolName": "sn.exe",
         "toolVersion": "V4.6.1586.0"
       },
       {
         "keyCode": "MSSharedLibSnKey",
         "operationSetCode": "StrongNameVerify",
         "parameters": null,
         "toolName": "sn.exe",
         "toolVersion": "V4.6.1586.0"
       },
       {
         "keyCode": "CP-230012",
         "operationSetCode": "SigntoolSign",
         "parameters": [
         {
           "parameterName": "OpusName",
           "parameterValue": "Microsoft"
         },
         {
           "parameterName": "OpusInfo",
           "parameterValue": "http://www.microsoft.com"
         },
         {
           "parameterName": "PageHash",
           "parameterValue": "/NPH"
         },
         {
           "parameterName": "FileDigest",
           "parameterValue": "/fd sha256"
         },
         {
           "parameterName": "TimeStamp",
           "parameterValue": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
         }
         ],
         "toolName": "signtool.exe",
         "toolVersion": "6.2.9304.0"
       },
       {
         "keyCode": "CP-230012",
         "operationSetCode": "SigntoolVerify",
         "parameters": [ ],
         "toolName": "signtool.exe",
         "toolVersion": "6.2.9304.0"
       }
     ]
    SessionTimeout: 20
    VerboseLogin: true
  condition: and(succeeded(), eq(variables['PipelineType'], 'legacy'))

- task: onebranch.pipeline.signing@1
  displayName: 'Sign ${{ parameters.LibraryName }} with OneBranch'
  inputs:
    command: 'sign'
    signing_profile: 'external_distribution' #CP-230012 -> https://eng.ms/docs/products/onebranch/signing/containerbuildsigning#signing-using-onebranchpipelinesigning-ado-task
    files_to_sign: '**/${{ parameters.LibraryName }}.dll'
    search_root: '$(Build.SourcesDirectory)\$(WilsonSourceDirectory)src'
  condition: and(succeeded(), eq(variables['PipelineType'], 'onebranch'))